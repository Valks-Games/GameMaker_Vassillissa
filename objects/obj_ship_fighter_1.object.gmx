<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship_fighter_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>par_ship</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
name = 'Sythe';
class = 'Fighter';
desc = 'A mass produced standard fighter with exceptional speed and maneuverability. Used to overcome the enemy by numbers.';
tier = 1;

maxmovespeed = 15.0
moveacc =      0.2
movefriction = 0.1
maxturnspeed = 5.0
turnacc =      0.6
turnfriction = 0.3

fuel = 10;
maxfuel = 10;

cost = 1000;
hpupgradecost = -1;
hpregenupgradecost = -1;
armorupgradecost = -1;
armorregenupgradecost = -1;
shieldupgradecost = -1;
shieldregenupgradecost = -1;

hp = 100;
maxhp = 100;
armor = 50;
maxarmor = 50;
shield = 25;
maxshield = 25;
hpregen = 0.1;
armorregen = 0.1;
shieldregen = 0.2;
hpregendelay = 10;
armorregendelay = 10;
shieldregendelay = 10;

cloaking = false;
findrange = 1000;
shootdelay = 10;

engineslots = 1;
hullslots = 1;
infantryslots = 2;
cargoslots = 3;
shipslots = 0;

turretslots = 2;
scr_init_turrets(turretslots, obj_turret_1, team, findrange, shootdelay, clipsize, clipreloaddelay, turretrotspd, scanwidth, bullettype, bulletlife, bulletspeed, id);
var push = 20;
turret[0,1] = point_direction(x,y,turret[0,0].x - 90,turret[0,0].y - 60);
turret[0,2] = point_distance(x,y,turret[0,0].x + push,turret[0,0].y + push);

turret[1,1] = point_direction(x,y,turret[1,0].x - 90,turret[1,0].y + 60);
turret[1,2] = point_distance(x,y,turret[1,0].x + push,turret[1,0].y + push);

scr_init_engines(engineslots, obj_engine, team)
engine[0,1] = point_direction(x,y,engine[0,0].x - 90,engine[0,0].y);
engine[0,2] = point_distance(x,y,engine[0,0].x + 3,engine[0,0].y + 3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_infantry_recruit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_infantry</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movespeed = 5
movefriction = 0.3
acc = 0.6
hp = 100
shoot_delay = 0
shipenterrange = 100
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move around
speed = max(speed-movefriction,0)
if(speed&gt;movespeed)speed=movespeed
if(speed&lt;0)speed=0

if (global.pause) exit;

if (keyboard_check_pressed(ord("E"))){
  if (instance_exists(par_ship)){
    target = instance_nearest(x,y,par_ship)
    if (distance_to_object(target) &lt; shipenterrange){
      if (target.playercontrolled == false){
        global.outofship = false;
        target.playercontrolled = true;
        view_object[view_current] = target;
        with(obj_infantry_recruit){
          instance_destroy();
        }
      } 
    }
  }
}
left=max(keyboard_check(ord("A")),keyboard_check(vk_left),0)
right=max(keyboard_check(ord("D")),keyboard_check(vk_right),0)
up=max(keyboard_check(ord("W")),keyboard_check(vk_up),0)
down=max(keyboard_check(ord("S")),keyboard_check(vk_down),0)
if (left){
  motion_add(180,acc)
}
if (right){
  motion_add(0,acc)
}
if (up){
  motion_add(90,acc)
}
if (down){
  motion_add(270,acc)
}

image_angle = point_direction(x,y,mouse_x,mouse_y)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shoot
shoot = max(keyboard_check(vk_space),0)
if (shoot){
  shoot_delay++;
  if (shoot_delay &gt; 2){
    shoot_delay = 0;
    bullet = instance_create(x,y,obj_proj_laser);
    bullet.direction = point_direction(x,y,mouse_x,mouse_y);
    bullet.image_angle = point_direction(x,y,mouse_x,mouse_y);
    bullet.speed = 30;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(par_ship)){
  target = instance_nearest(x,y,par_ship)
  if (distance_to_object(target) &lt; shipenterrange){
    draw_set_colour(c_white)
    draw_set_halign(fa_center)
    draw_set_valign(fa_middle)
    draw_text(x,y+sprite_get_height(sprite_index),"Press E to Enter")
    draw_set_alpha(.5)
    draw_line(x,y,target.x,target.y)
    draw_set_alpha(1)
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//important
range = 500;
scanwidth = 2;
turretrotspd = 6;
team = 1;
shootdelay = 2;
clipsize = 5;
clipreloaddelay = -50;
bullettype = obj_proj_laser;
bulletspeed = 20;
bulletlife = 80;
//ignore
clipsizecounter = 0;
shoot = 0;
radius = 40;
angle = 300;
themenu = -1;
turretmenucreated = false;
turretid = -1;
shipid = -1;
turretscreated = -1;
type = -1;
foundtarget = false;
dontfind = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) exit;

if (turretmenucreated == true){
  if (instance_exists(themenu)){
    themenu.x = x + lengthdir_x(50,100);
    themenu.y = y + lengthdir_y(50,-100);
    themenu.speed = speed;
    themenu.direction = direction;
    if (distance_to_object(obj_mouse) &gt; 10){
      turretmenucreated = false;
      with(themenu){
        global.turretmenus -= 1;
        instance_destroy();
      }
    }
  }
}

if (shipid.playercontrolled){
  image_angle += sin(degtorad(point_direction(x,y,mouse_x,mouse_y) - image_angle)) * turretrotspd;
  if (keyboard_check(vk_space)){
    scr_turret_shoot();
  } else {
    shoot++;
  }
}

if (!shipid.playercontrolled){
  if (instance_exists(par_ship)){
    var shootAgain = false;
    for (var i = 0, n = instance_number(par_ship); i &lt; n; i++){
      target = instance_find(par_ship,i)
      if (distance_to_object(target) &lt; range &amp;&amp; target.team != team &amp;&amp; !shootAgain){
        image_angle += sin(degtorad(point_direction(x,y,target.x,target.y) - image_angle)) * turretrotspd;
        scr_turret_shoot();
        shootAgain = true;
        break;
      }
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.turretmenus == 0){
  if (turretmenucreated == false){
    turretmenucreated = true;
    themenu = instance_create(x,y,obj_menu_turret);
    themenu.turretid = id;
    themenu.shipid = shipid;
    themenu.turretx = x;
    themenu.turrety = y;
    global.turretmenus += 1;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check(vk_f2)){
  draw_set_color(c_white)
  draw_set_font(fnt_small)
  draw_text(x,y,id)
}

if (turretmenucreated == true){
  if (instance_exists(themenu)){
    draw_set_color(c_white)
    draw_set_alpha(.5)
    draw_line(x,y,themenu.x,themenu.y - 30 + 5 + themenu.mpos * themenu.space)
    draw_set_alpha(1)
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

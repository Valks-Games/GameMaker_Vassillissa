<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>zoom_speed = 0
turn_speed = 0
turn_right = false
max_zoom_speed = 50
max_turn_speed = 1
zoom_up = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///zoom controls
if (global.pause) exit;

if (mouse_wheel_up() || keyboard_check(vk_numpad8) || keyboard_check(vk_add)){
  zoom_up = true
  zoom_speed+=10
}
if (mouse_wheel_down() || keyboard_check(vk_numpad2) || keyboard_check(vk_subtract)){
  zoom_up = false
  zoom_speed+=10
}
/*if (keyboard_check(vk_numpad4)){
  turn_right = false
  turn_speed+=0.2
}
if (keyboard_check(vk_numpad6)){
  turn_right = true
  turn_speed+=0.2
}*/

zoom_speed = max(zoom_speed - 1.2, 0)
turn_speed = max(turn_speed - 0.05, 0)

if (turn_right){
  view_angle[view_current] -= turn_speed
} else {
  view_angle[view_current] += turn_speed
}

if (view_wview[view_current] &gt;= 1000 &amp;&amp; view_hview[0] &gt;= 500 &amp;&amp; view_wview[0] &lt;= room_width &amp;&amp; view_hview[0] &lt;= room_height)
{
  if (zoom_up){
    view_wview[view_current] -= zoom_speed
    view_hview[view_current] -= zoom_speed/2
  } else {
    view_wview[view_current] += zoom_speed
    view_hview[view_current] += zoom_speed/2
  }
  view_hborder[view_current] = view_wview[view_current] / 2;
  view_vborder[view_current] = view_hview[view_current] / 2;
} else {
  zoom_speed = 0
  if (view_wview[view_current] &lt; 1000) view_wview[view_current] = 1000
  if (view_hview[view_current] &lt; 500) view_hview[view_current] = 500
  if (view_wview[view_current] &gt; room_width) view_wview[view_current] = room_width
  if (view_hview[view_current] &gt; room_height) view_hview[view_current] = room_height
}

if (zoom_speed &gt; max_zoom_speed) zoom_speed = max_zoom_speed
if (turn_speed &gt; max_turn_speed) turn_speed = max_turn_speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

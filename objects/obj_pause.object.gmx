<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.pause = 0;

themenu[0] = "Resume";
themenu[1] = "Controls";
themenu[2] = "End Game";

color = c_white;
trans = 0
space = 64;
mpos = 0; //menu position

global.controls = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_escape) &amp;&amp; global.controls == false){
  if (global.pause == 0){
    mpos = 0;
    global.pause = 1;
  } else {
    global.pause = 0;
  }
}

if (global.pause){
  var move = 0;
  move -= max(keyboard_check_pressed(vk_up),keyboard_check_pressed(ord("W")),0); //returns 1 or 0
  move += max(keyboard_check_pressed(vk_down),keyboard_check_pressed(ord("S")),0); //returns 1 or 0
  
  if (move != 0)
  {
      mpos += move;
      if (mpos &lt; 0) mpos = array_length_1d(themenu) - 1;
      if (mpos &gt; array_length_1d(themenu) - 1) mpos = 0;
  }
  
  var push;
  push = max(keyboard_check_pressed(vk_enter),keyboard_check_pressed(vk_shift),keyboard_check_pressed(vk_space),0);
  if (push == 1) scr_menu_pause();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause &amp;&amp; global.controls == false){
  draw_set_color(c_black)
  draw_set_alpha(0.8)
  draw_rectangle(0,0,room_width,room_height,false)
  draw_set_halign(fa_center)
  draw_set_font(fnt_small)
  draw_set_color(c_white)
  draw_set_alpha(1)
  var m;
  for (m = 0; m  &lt; array_length_1d(themenu); m+=1){
    draw_text(1366/2 - 100 + space, 768/2 - 100 + (m * space), string(themenu[m]))
  }
  draw_sprite(sprite_index, 0, 1366/2 - 100 + 16, 768/2 - 100 + 5 + mpos * space);
  draw_set_color(c_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init button
text = 'Click Me';
width = 64;
height = 32;
hover = false;

display_x = xstart*global.display_scale;
display_y = ystart*global.display_scale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check to see if the mouse is above us
var xhover = (global.gui_mouse_x == median(display_x-width/2,global.gui_mouse_x, display_x+width/2));
var yhover = (global.gui_mouse_y == median(display_y-height/2,global.gui_mouse_y, display_y+height/2));
hover = xhover &amp;&amp; yhover;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hover){
  switch(text){
    case "Play": {
      room_goto(rm_space)
      break;
    }
    case "Spawn Ally":{
      allyfighter = instance_create(x,y + 100,obj_ship_fighter_3);
      allyfighter.image_blend = c_aqua;
      allyfighter.team = 1;
      with(allyfighter){
        var s;
        for (s = 0; s &lt; turretslots; s++){
          turret[s, 0].team = 1;
          //turret[s, 1] = 1;
        }
      }
      break;
    }
    case "Spawn Enemy": {
      enemyfighter = instance_create(x,y - 100,obj_ship_fighter_3);
      enemyfighter.image_blend = c_red;
      enemyfighter.team = 2;
      with(enemyfighter){
        var s;
        for (s = 0; s &lt; turretslots; s++){
          turret[s, 0].team = 2;
          //turret[s, 1] = 2;
        }
      }
      break;
    }
    case "Shop": {
      if (global.shopcreated){
        with(obj_shop){
          instance_destroy();
        }
      } else {
        instance_create(50,50,obj_shop)
      }
      break;
    }
    case "Upgrade Health": {
      if (instance_exists(par_ship)){
        var i;
        for (i = 0; i &lt; instance_number(par_ship); i += 1){
          target = instance_find(par_ship,i)
          if (target.playercontrolled){
            target.maxhp += 100
          }
        }
      }
      break;
    }
    case "Upgrade Armor": {
      if (instance_exists(par_ship)){
        var i;
        for (i = 0; i &lt; instance_number(par_ship); i += 1){
          target = instance_find(par_ship,i)
          if (target.playercontrolled){
            target.maxarmor += 100
          }
        }
      }
      break;
    }
    case "Upgrade Shield": {
      if (instance_exists(par_ship)){
        var i;
        for (i = 0; i &lt; instance_number(par_ship); i += 1){
          target = instance_find(par_ship,i)
          if (target.playercontrolled){
            target.maxshield += 100
          }
        }
      }
      break;
    }
    case "Upgrade Firerate": {
      if (instance_exists(par_ship)){
        var i;
        for (i = 0; i &lt; instance_number(par_ship); i += 1){
          target = instance_find(par_ship,i)
          if (target.playercontrolled){
            if (target.shootdelay &gt;= 1){
              target.shootdelay -= 1
            }
          }
        }
      }
      break;
    }
    case "Exit": {
      scr_savegame();
      game_end();
      break;
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the gui button

if (hover) {
  draw_set_alpha(.9)
} else {
  draw_set_alpha(.7)
}

draw_rectangle_colour(display_x-width/2,display_y-height/2,display_x+width/2,display_y+height/2,c_aqua,c_aqua,c_teal,c_teal,false);
draw_set_alpha(1)
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text_colour(display_x, display_y, text, c_teal, c_teal, c_white, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
